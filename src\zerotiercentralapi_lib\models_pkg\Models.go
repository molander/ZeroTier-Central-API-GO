/*
 * zerotiercentralapi_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

package models_pkg


/*
 * Structure for the custom type Status
 */
type Status struct {
    Online               *bool           `json:"online,omitempty" form:"online,omitempty"` //Always true
    Clock                *float64        `json:"clock,omitempty" form:"clock,omitempty"` //Current server-side system clock (ms since epoch)
    Version              *string         `json:"version,omitempty" form:"version,omitempty"` //ZeroTier Central version
    ApiVersion           *float64        `json:"apiVersion,omitempty" form:"apiVersion,omitempty"` //ZeroTier Central API version
    Uptime               *float64        `json:"uptime,omitempty" form:"uptime,omitempty"` //This host's uptime in milliseconds
    User                 *interface{}    `json:"user,omitempty" form:"user,omitempty"` //Current user if authenticated, otherwise null
    StripePublishableKey *string         `json:"stripePublishableKey,omitempty" form:"stripePublishableKey,omitempty"` //Publishable key for Stripe payment processor or null if not configured
    PaidPlans            *interface{}    `json:"paidPlans,omitempty" form:"paidPlans,omitempty"` //Available paid plans (if configured)
    SmsEnabled           *bool           `json:"smsEnabled,omitempty" form:"smsEnabled,omitempty"` //True if SMS messaging is available
    ClusterNode          *string         `json:"clusterNode,omitempty" form:"clusterNode,omitempty"` //Name of current cluster node servicing this request
    LoginMethods         *interface{}    `json:"loginMethods,omitempty" form:"loginMethods,omitempty"` //Object containing login methods and whether they are available
    RecaptchaSiteKey     *string         `json:"recaptchaSiteKey,omitempty" form:"recaptchaSiteKey,omitempty"` //Recaptcha site key or null if not configured
    ReturnTo             *string         `json:"return_to,omitempty" form:"return_to,omitempty"` //Bounce destination if using Central as third party auth source (used for ZeroTier support login)
}

/*
 * Structure for the custom type RandomToken
 */
type RandomToken struct {
    Token           *string         `json:"token,omitempty" form:"token,omitempty"` //Random string suitable for use as an API authentication token
    Clock           *float64        `json:"clock,omitempty" form:"clock,omitempty"` //Current server-side system clock (ms since epoch)
    Raw             *string         `json:"raw,omitempty" form:"raw,omitempty"` //Raw random bytes in hex format
}

/*
 * Structure for the custom type User
 */
type User struct {
    Id                *string         `json:"id,omitempty" form:"id,omitempty"` //User ID (GUID) [ro]
    Type              *string         `json:"type,omitempty" form:"type,omitempty"` //Object type [ro]
    Clock             *float64        `json:"clock,omitempty" form:"clock,omitempty"` //Current system clock on server [ro]
    GlobalPermissions GlobalPermissions `json:"globalPermissions,omitempty" form:"globalPermissions,omitempty"` //TODO: Write general description for this field
    Ui                *interface{}    `json:"ui,omitempty" form:"ui,omitempty"` //Arbitrary data that is stored and used by the UI [rw]
    DisplayName       *string         `json:"displayName,omitempty" form:"displayName,omitempty"` //User display name [rw]
    Email             *string         `json:"email,omitempty" form:"email,omitempty"` //User e-mail [ro]
    Auth              *interface{}    `json:"auth,omitempty" form:"auth,omitempty"` //Object containing one or more authentication types and login names or IDs [ro]
    SmsNumber         *string         `json:"smsNumber,omitempty" form:"smsNumber,omitempty"` //SMS telephone number for sending SMS notifications [rw]
    Tokens            *[]string       `json:"tokens,omitempty" form:"tokens,omitempty"` //Array of API authentication tokens [rw]
    Permissions       Permissions     `json:"permissions,omitempty" form:"permissions,omitempty"` //TODO: Write general description for this field
    Subscriptions     *interface{}    `json:"subscriptions,omitempty" form:"subscriptions,omitempty"` //Subscriptions by plan ID [ro]
}

/*
 * Structure for the custom type GlobalPermissions
 */
type GlobalPermissions struct {
    R               *bool           `json:"r,omitempty" form:"r,omitempty"` //Read
    M               *bool           `json:"m,omitempty" form:"m,omitempty"` //Modify
    D               *bool           `json:"d,omitempty" form:"d,omitempty"` //Delete
    A               *bool           `json:"a,omitempty" form:"a,omitempty"` //Authorize
    O               *bool           `json:"o,omitempty" form:"o,omitempty"` //Owner
}

/*
 * Structure for the custom type Permissions
 */
type Permissions struct {
    MId             MId             `json:"{id},omitempty" form:"{id},omitempty"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type MId
 */
type MId struct {
    R               *bool           `json:"r,omitempty" form:"r,omitempty"` //Read
    M               *bool           `json:"m,omitempty" form:"m,omitempty"` //Modify
    D               *bool           `json:"d,omitempty" form:"d,omitempty"` //Delete
    A               *bool           `json:"a,omitempty" form:"a,omitempty"` //Authorize
    O               *bool           `json:"o,omitempty" form:"o,omitempty"` //Owner
    T               *string         `json:"t,omitempty" form:"t,omitempty"` //Type of actor object (currently User or Group)
}

/*
 * Structure for the custom type Network
 */
type Network struct {
    Id                 *string         `json:"id,omitempty" form:"id,omitempty"` //16-digit ZeroTier network ID [ro]
    Type               *string         `json:"type,omitempty" form:"type,omitempty"` //Object type ("Network") [ro]
    Clock              *float64        `json:"clock,omitempty" form:"clock,omitempty"` //Current system clock on server [ro]
    Ui                 *interface{}    `json:"ui,omitempty" form:"ui,omitempty"` //Arbitrary data that is stored and used by the UI [rw]
    RulesSource        *string         `json:"rulesSource,omitempty" form:"rulesSource,omitempty"` //Source code of network rule set [rw]
    Description        *string         `json:"description,omitempty" form:"description,omitempty"` //Long description of this network [rw]
    Permissions        Permissions     `json:"permissions,omitempty" form:"permissions,omitempty"` //TODO: Write general description for this field
    OnlineMemberCount  *float64        `json:"onlineMemberCount,omitempty" form:"onlineMemberCount,omitempty"` //Number of members online [ro]
    CapabilitiesByName *interface{}    `json:"capabilitiesByName,omitempty" form:"capabilitiesByName,omitempty"` //Capabilities defined in rule set by name [rw]
    TagsByName         *interface{}    `json:"tagsByName,omitempty" form:"tagsByName,omitempty"` //Tags defined in rule set by name [rw]
    CircuitTestEvery   *float64        `json:"circuitTestEvery,omitempty" form:"circuitTestEvery,omitempty"` //Circuit test this network every N milliseconds [ro]
    Config             Config          `json:"config,omitempty" form:"config,omitempty"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Config
 */
type Config struct {
    Id                    *string         `json:"id,omitempty" form:"id,omitempty"` //16-digit ZeroTier network ID [ro]
    Nwid                  *string         `json:"nwid,omitempty" form:"nwid,omitempty"` //16-digit ZeroTier network ID (for backward compatibility) [ro]
    Name                  *string         `json:"name,omitempty" form:"name,omitempty"` //Short name of network [rw]
    Objtype               *string         `json:"objtype,omitempty" form:"objtype,omitempty"` //Object type on controller ("network") [ro]
    Private               *bool           `json:"private,omitempty" form:"private,omitempty"` //If true, certificate access control is enabled [rw]
    CreationTime          *float64        `json:"creationTime,omitempty" form:"creationTime,omitempty"` //Time network was created on controller [ro]
    Revision              *float64        `json:"revision,omitempty" form:"revision,omitempty"` //Network revision number [ro]
    LastModified          *float64        `json:"lastModified,omitempty" form:"lastModified,omitempty"` //Time config was last modified [ro]
    MulticastLimit        *float64        `json:"multicastLimit,omitempty" form:"multicastLimit,omitempty"` //Max recipients per multicast or broadcast [rw]
    Routes                *[]interface{}  `json:"routes,omitempty" form:"routes,omitempty"` //Array of IP routes published to members [rw]
    Rules                 *[]interface{}  `json:"rules,omitempty" form:"rules,omitempty"` //Network base rules table [rw]
    Tags                  *[]interface{}  `json:"tags,omitempty" form:"tags,omitempty"` //Array of tags available on this network [rw]
    Capabilities          *[]interface{}  `json:"capabilities,omitempty" form:"capabilities,omitempty"` //Array of capabilities available on this network [rw]
    TotalMemberCount      *float64        `json:"totalMemberCount,omitempty" form:"totalMemberCount,omitempty"` //Total number of members [ro]
    ActiveMemberCount     *float64        `json:"activeMemberCount,omitempty" form:"activeMemberCount,omitempty"` //Number of active/online members [ro]
    AuthTokens            *[]string       `json:"authTokens,omitempty" form:"authTokens,omitempty"` //Array of authentication tokens for auto-authorizing new members [rw]
    AuthorizedMemberCount *float64        `json:"authorizedMemberCount,omitempty" form:"authorizedMemberCount,omitempty"` //Number of authorized members [ro]
    V4AssignMode          *interface{}    `json:"v4AssignMode,omitempty" form:"v4AssignMode,omitempty"` //Boolean toggles for IPv4 assignment modes [rw]
    V6AssignMode          *interface{}    `json:"v6AssignMode,omitempty" form:"v6AssignMode,omitempty"` //Boolean toggles for IPv6 assignment modes [rw]
}

/*
 * Structure for the custom type Member
 */
type Member struct {
    Id                     *string         `json:"id,omitempty" form:"id,omitempty"` //Member record ID, which is formed from the network and node IDs [ro]
    Type                   *string         `json:"type,omitempty" form:"type,omitempty"` //Object type ("Member") [ro]
    Clock                  *float64        `json:"clock,omitempty" form:"clock,omitempty"` //System clock on server [ro]
    NetworkId              *string         `json:"networkId,omitempty" form:"networkId,omitempty"` //16-digit ZeroTier network ID [ro]
    NodeId                 *string         `json:"nodeId,omitempty" form:"nodeId,omitempty"` //10-digit ZeroTier node ID / device address [ro]
    ControllerId           *string         `json:"controllerId,omitempty" form:"controllerId,omitempty"` //10-digit ZeroTier node ID of controller (same as first 10 digits of network ID) [ro]
    Hidden                 *bool           `json:"hidden,omitempty" form:"hidden,omitempty"` //Hidden in UI? [rw]
    Name                   *string         `json:"name,omitempty" form:"name,omitempty"` //Short name describing member [rw]
    Description            *string         `json:"description,omitempty" form:"description,omitempty"` //Long form description [rw]
    Online                 *bool           `json:"online,omitempty" form:"online,omitempty"` //Member is online? (has requested an update recently) [ro]
    LastOnline             *float64        `json:"lastOnline,omitempty" form:"lastOnline,omitempty"` //Time member was last determined to be online [ro]
    LastOffline            *float64        `json:"lastOffline,omitempty" form:"lastOffline,omitempty"` //Time member was last determined to be offline [ro]
    PhysicalAddresses      *[]string       `json:"physicalAddresses,omitempty" form:"physicalAddresses,omitempty"` //Array of most recently known physical addresses of member [ro]
    PhysicalAddress        *string         `json:"physicalAddress,omitempty" form:"physicalAddress,omitempty"` //Latest physical address of member [ro]
    PhysicalLocation       *interface{}    `json:"physicalLocation,omitempty" form:"physicalLocation,omitempty"` //Latitude and longitude of GeoIP-determined location of physicalAddress (if available) [ro]
    ClientVersion          *string         `json:"clientVersion,omitempty" form:"clientVersion,omitempty"` //Most recent client software version [ro]
    ProtocolVersion        *float64        `json:"protocolVersion,omitempty" form:"protocolVersion,omitempty"` //Most recent client-reported ZeroTier protocol version [ro]
    SupportsCircuitTesting *bool           `json:"supportsCircuitTesting,omitempty" form:"supportsCircuitTesting,omitempty"` //True if member supports circuit testing [ro]
    SupportsRulesEngine    *bool           `json:"supportsRulesEngine,omitempty" form:"supportsRulesEngine,omitempty"` //True if member supports the new (post-1.2) rules engine [ro]
    OfflineNotifyDelay     *float64        `json:"offlineNotifyDelay,omitempty" form:"offlineNotifyDelay,omitempty"` //Notify of offline after this many milliseconds [rw]
    Config                 Config11        `json:"config,omitempty" form:"config,omitempty"` //TODO: Write general description for this field
}

/*
 * Structure for the custom type Config11
 */
type Config11 struct {
    Id                   *string         `json:"id,omitempty" form:"id,omitempty"` //10-digit ZeroTier node ID [ro]
    Address              *string         `json:"address,omitempty" form:"address,omitempty"` //10-digit ZeroTier node ID [ro]
    Nwid                 *string         `json:"nwid,omitempty" form:"nwid,omitempty"` //16-digit network ID [ro]
    Objtype              *string         `json:"objtype,omitempty" form:"objtype,omitempty"` //Object type on controller ("member") [ro]
    Authorized           *bool           `json:"authorized,omitempty" form:"authorized,omitempty"` //True if authorized (only matters on private networks) [rw]
    AuthHistory          *[]interface{}  `json:"authHistory,omitempty" form:"authHistory,omitempty"` //History of most recent authentications [ro]
    Capabilities         *[]float64      `json:"capabilities,omitempty" form:"capabilities,omitempty"` //Array of IDs of capabilities assigned to this member [rw]
    Tags                 *[]float64      `json:"tags,omitempty" form:"tags,omitempty"` //Array of tuples of tag ID, tag value [rw]
    CreationTime         *float64        `json:"creationTime,omitempty" form:"creationTime,omitempty"` //Time member record was first created [ro]
    Identity             *string         `json:"identity,omitempty" form:"identity,omitempty"` //ZeroTier public identity of member (address and public key) [ro]
    IpAssignments        *[]string       `json:"ipAssignments,omitempty" form:"ipAssignments,omitempty"` //Array of IP assignments published to member [rw]
    LastAuthorizedTime   *float64        `json:"lastAuthorizedTime,omitempty" form:"lastAuthorizedTime,omitempty"` //Time member was last authorized on network [ro]
    LastDeauthorizedTime *float64        `json:"lastDeauthorizedTime,omitempty" form:"lastDeauthorizedTime,omitempty"` //Time member was last de-authorized on network [ro]
    LastRequestMetaData  *string         `json:"lastRequestMetaData,omitempty" form:"lastRequestMetaData,omitempty"` //Raw request meta-data received from member's most recent request [ro]
    NoAutoAssignIps      *bool           `json:"noAutoAssignIps,omitempty" form:"noAutoAssignIps,omitempty"` //If true do not auto-assign IPv4 or IPv6 addresses, overriding network settings [rw]
    RecentLog            *[]interface{}  `json:"recentLog,omitempty" form:"recentLog,omitempty"` //Log of most recent requests from member [ro]
    Revision             *float64        `json:"revision,omitempty" form:"revision,omitempty"` //Member record revision counter [ro]
}
